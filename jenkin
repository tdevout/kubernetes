import jenkins.model.Jenkins

def inst = Jenkins.getInstance()
def emailExt = instance.getDescriptor(
  "hudson.plugins.emailext.ExtendedEmailPublisher")

emailExt.setSmtpAuth("username",
                     "password")
emailExt.setDefaultReplyTo("jenkins@example.com")
emailExt.setSmtpServer("smtp.example.com")
emailExt.setUseSsl(true)
emailExt.setSmtpPort("587")
emailExt.setCharset("utf-8")
emailExt.setDefaultRecipients("someone@example.com")

emailExt.save()


---
pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
    }
    post {
      always {
        cleanWs()
      }
      success {
        emailext body: '${JOB_NAME} succeed', subject: 'Jenkins test', to: 'dharmik.thakkar@'
      }
      failure {
        emailext (attachLog: true, body: '${JOB_NAME} failed.  Open ${BUILD_URL} to check for more details.', subject: '${BUILD_TAG} Failed', to: 'dharmik.thakkar@')
      }
      
    }
}



---


pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building the project...'
            }
        }
        stage('Notify') {
            steps {
                script {
                    def sendEmail(String recipient, String subject, String body, String smtpHost, int smtpPort, String smtpUser, String smtpPassword) {
                        def mail = new EmailBuilder()
                            .from("jenkins@example.com")
                            .to(recipient)
                            .subject(subject)
                            .text(body)
                            .smtp(host: smtpHost, port: smtpPort, username: smtpUser, password: smtpPassword)
                            .build()
                        mail.send()
                    }

                    sendEmail("recipient1@example.com", "Jenkins Build Result", "The Jenkins build has completed. Check the results for more details.", "smtp.example.com", 587, "jenkins", "password1")
                    sendEmail("recipient2@example.com", "Jenkins Build Result", "The Jenkins build has completed. Check the results for more details.", "smtp.example.net", 465, "jenkins", "password2")
                }
            }
        }
    }
}



---


pipeline {
    agent any
    parameters {
        string(name: 'to', defaultValue: 'recipient@example.com', description: 'Email recipient')
        string(name: 'from', defaultValue: 'sender@example.com', description: 'Email sender')
    }
    stages {
        stage('Test Email Configuration') {
            steps {
                script {
                    def mailer = new org.jenkinsci.plugins.mailer.DefaultMailer()
                    def to = params.to
                    def from = params.from
                    def subject = "Test Email from Jenkins"
                    def body = "This is a test email sent from Jenkins pipeline"

                    boolean response = mailer.send(to, subject, body, from)
                    if (response) {
                        echo "Email sent successfully!"
                    } else {
                        echo "Failed to send email!"
                    }
                }
            }
        }
    }
}


---

pipeline {
    agent any
    stages {
        stage('Test Email Configuration') {
            steps {
                script {
                    def to = "recipient@example.com"
                    def subject = "Test Email from Jenkins"
                    def body = "This is a test email sent from Jenkins pipeline"
                    def buildResult = currentBuild.currentResult
                    if (buildResult == 'SUCCESS') {
                        emailnotify to: "${to}", subject: "${subject}", body: "${body}",
                                   replyTo: "${params.from}", mimeType: 'text/html'
                    }
                }
            }
        }
    }
}

